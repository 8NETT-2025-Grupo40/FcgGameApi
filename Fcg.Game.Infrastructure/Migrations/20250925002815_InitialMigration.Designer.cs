// <auto-generated />
using System;
using Fcg.Game.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Fcg.Game.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseGameContext))]
    [Migration("20250925002815_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Fcg.Game.Domain.Entities.GameModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Genre")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Game", (string)null);
                });

            modelBuilder.Entity("Fcg.Game.Domain.Entities.PurchasedGameModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GameIdentifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UserIdentifier")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("PurchasedGames", (string)null);
                });

            modelBuilder.Entity("Fcg.Game.Domain.Entities.GameModel", b =>
                {
                    b.OwnsOne("Fcg.Game.Domain.ValueObjects.Description", "Description", b1 =>
                        {
                            b1.Property<Guid>("GameModelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(510)
                                .HasColumnType("nvarchar(510)")
                                .HasColumnName("Description");

                            b1.HasKey("GameModelId");

                            b1.ToTable("Game");

                            b1.WithOwner()
                                .HasForeignKey("GameModelId");
                        });

                    b.OwnsOne("Fcg.Game.Domain.ValueObjects.Price", "Price", b1 =>
                        {
                            b1.Property<Guid>("GameModelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Value")
                                .HasPrecision(10, 2)
                                .HasColumnType("decimal(10,2)")
                                .HasColumnName("Price");

                            b1.HasKey("GameModelId");

                            b1.ToTable("Game");

                            b1.WithOwner()
                                .HasForeignKey("GameModelId");
                        });

                    b.OwnsOne("Fcg.Game.Domain.ValueObjects.Title", "Title", b1 =>
                        {
                            b1.Property<Guid>("GameModelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("nvarchar(255)")
                                .HasColumnName("Title");

                            b1.HasKey("GameModelId");

                            b1.ToTable("Game");

                            b1.WithOwner()
                                .HasForeignKey("GameModelId");
                        });

                    b.Navigation("Description")
                        .IsRequired();

                    b.Navigation("Price")
                        .IsRequired();

                    b.Navigation("Title")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
